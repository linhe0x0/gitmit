#!/usr/bin/env node

/**
 * Module dependencies.
 */
const program = require('commander')
const updateNotifier = require('update-notifier')
const commands = require('../src/commands')
const pkg = require('../package.json')

/**
 * Add command options.
 */
program
  .version(pkg.version)
  .option('-e, --with-emoji', 'start the interactive commit client with emoji support')
  .option('-c, --with-convention', 'start the interactive commit client with git commit message convention support')
  .option('--by-hook')

/**
 * Add command `hook`
 */
program
  .command('hook')
  .option('--init', 'initialize gitmit as a commit hook')
  .option('--remove', 'remove gitmit from commit hook')
  .description('Initialize gitmit as a commit hook.')
  .action(commands.hook)

/**
 * Add command `update`
 */
program
  .command('update')
  .description('Sync emoji list with the repo.')
  .action(commands.update)

/**
 * Add command `search`
 */
program
  .command('search')
  .arguments('<keywords...>')
  .description('Search emojis.')
  .action(commands.search)

/**
 * Output examples when `--help` is used.
 */
program.on('--help', function () {
  console.log('  Examples:')
  console.log('')
  console.log('    $ gitmit')
  console.log('    $ gitmit -e')
  console.log('    $ gitmit -c')
  console.log('    $ gitmit -e -c')
})

program.parse(process.argv)

/**
 * Run the main function only if gitmit is executed without any options or in hook mode.
 */
if (program.byHook === true || !program.args.length) {
  commands.main(program)
}

/**
 * Checks and inform users if there is an available update.
 */
updateNotifier({pkg}).notify()
